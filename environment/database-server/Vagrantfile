# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure(2) do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.
	
  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  config.vm.box = "ubuntu/trusty64"


	 config.vm.define "database" do |node|
  	 	node.vm.hostname = "database"

		# Create a private network, which allows host-only access to the machine
  		# using a specific IP.
  		node.vm.network "private_network", ip: "10.11.1.7", virtualbox_intnet: true

		node.vm.synced_folder "resources-database/", "/home/vagrant/resources", :mount_options => ["dmode=777", "fmode=777"]
		node.vm.synced_folder "config-database/", "/home/vagrant/config", :mount_options => ["dmode=777", "fmode=777"]

		node.vm.provider "virtualbox" do |vb|
     			vb.memory = "512"
   		end
	  	# Enable provisioning with a shell script. Additional provisioners such as
	  	# Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
	  	# documentation for more information about their specific syntax and use.
 	  	node.vm.provision "shell", inline: "sudo apt-get update"
	  	node.vm.provision "shell", path: "../shared/build-essential.sh"
	  	node.vm.provision "shell", path: "../shared/git.sh"
	  	node.vm.provision "shell", path: "../shared/nodejs.sh"
	  	node.vm.provision "shell", path: "scripts-database/mongodb.sh"
	  	node.vm.provision "shell", path: "scripts-database/mongo-express.sh"
	  	node.vm.provision "shell", inline: "echo 'configurazione del database completata'" 
	end

	config.vm.define "server" do |node|
  	 	node.vm.hostname = "server"

		# Create a private network, which allows host-only access to the machine
  		# using a specific IP.
  		node.vm.network "private_network", ip: "10.11.1.5", virtualbox_intnet: true

		node.vm.synced_folder "../../project/", "/home/vagrant/project", :mount_options => ["dmode=777", "fmode=777"]
		node.vm.synced_folder "config-server/", "/home/vagrant/config", :mount_options => ["dmode=777", "fmode=777"]

		node.vm.provider "virtualbox" do |vb|
     			vb.memory = "512"
   		end

	  	# Enable provisioning with a shell script. Additional provisioners such as
	  	# Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
	  	# documentation for more information about their specific syntax and use.
	  	node.vm.provision "shell", inline: "sudo apt-get update"
		node.vm.provision "shell", path: "../shared/build-essential.sh"
	        node.vm.provision "shell", path: "../shared/git.sh"
		node.vm.provision "shell", path: "../shared/nodejs.sh"
		node.vm.provision "shell", path: "scripts-server/server-daemon.sh"
		node.vm.provision "shell", path: "scripts-server/node-modules.sh"
		node.vm.provision "shell", inline: "sudo iptables -t nat -A PREROUTING -p tcp --dport 80 -j REDIRECT --to 8000 2>&1", run: "always"
		node.vm.provision "shell", inline: "echo 'configurazione del server completata'" 
	end
end
  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
 

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end



